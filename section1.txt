section1
1.DB를 엑셀이라고 생각하자.
데이터는 db에 엑셀처럼 저장이 된다.
첫번째 줄은 데이터의 이름.
데이터를 하나의 셀에 2개를 저장하면 안된다.
세로축을 칼럼,열 가로축을 로우,행이라고 한다.

1.1정규형
각 칸에는 쪼갤 수 없는 데이터가 있어야 한다.
하나의 칸에 1,2 처럼 2개가 같이 들어가면 안됨.
전화번호처럼 010-1111-1111으로 010, 1111, 1111 이런식으로 나눌 수도 있지만
나누는 것이 큰 의미가 없을 경우 붙여서 쓴다.

아이디가 필요한 이유
- 데이터를 불러올 때 다른 데이터를 가져오는 것을 예방하기 위해서 
- 아이디는 고유한 값(중복되지 않는 값)으로 다른 데이터와 겹치지 않게 unique한 값으로 정한다.

칼럼2개를 키로 만들어줄 수 있는데 이런 것을 복합키라고 한다.

------------------------------------------------------------------------------------
아이디를 연이은 숫자로 할 때 장단점
nano Id는 uuid보다 짧은 랜덤한 키값을 줄 수 있다.
연이은 숫자로 할 경우 내 아이디를 알게 되고, 다른 사람의 아이디도 알게 된다면 회사의 정보를 유츄할 수 있어서 정보를 노출시킬 수 있다.

*칼럼을 늘리는 것은 어려운 작업
테이블이 비어있는 것은 좋지 않다.

------------------------------------------------------------------------------------
일대일, 일대다, 다대다 관계

일대일: 이름 하나가 하나의 사원번호를 가지는 경우 
일대다: 한명이 전화번호를 여러개 가질 수 있다 && 하나의 전화번호는 하나의 이름을 가질 수 있다.
	 erd에서는 다의 관계에 해당되는 테이블에 삼바리? 같은 것을 붙인다.
다대다: 한명이 여러개의 프로젝트를 맡을 수 잇다 && 프로젝트는 여러명이 수행할 수 있다. --> 다대다관계일 경우 매핑테이블을 만들어줘야 한다.

칼럼이 많아질 경우, 자주쓰이는 칼럼과 안쓰이는 칼럼을 나누어 사용하기도 한다.

soft delete  hard delete
데이터를 지울 수 없는 경우 칼럼에 간접적으로 지웠다는 것을 표시하는 것
--> 사원테이블이 있을 때 사원의 정보를 지울 수 없기 때문에 퇴사일이라는 칼럼에 값을 넣음으로써 퇴사했다는 것을 표현함 
--> 이것이 soft delete
hard delete는 db에서 바로 지우는 것

나중에 정보가 필요할 것 같으면 soft delete, 필요하지 않을 것 같으면 hard delete
------------------------------------------------------------------------------------
2정규화, 3정규화, 역정규화

1.2정규형
부분함수 중복
외래키 2개를 합치면 복합키면서 기본키가 될 수 있다.
칼럼이 복합키 안의 모든 키와 관련이 없으면 테이블을 분리해주어야 한다.
관련이 있는 테이블로 해당 칼럼을 옮겨주어야 한다.

2.3정규형
사원테이블에서 직급에 따른 최저연봉을 변경한다고 할 때, 해당직급의 모든 사람을 찾아서 최저연봉을 변경해줘야 한다면
정규화에 위반되었다고 보면된다.
ex) 과장의 연봉이 변경되었을 때, 모든 과장을 찾아서 변경해주는 것이 정규화에 위반된 사례
이름 -> 직급 , 직급 -> 최저연봉 , 이름 -> 최저연봉
A -> B       b -> C           A -> C
다음과 같은 관계가 될 경우 ab, bc를 분리해주어야 한다.
칼럼이 1개만 있을 때는 분리하지 않는다.

3.역정규화
정규화를 위반했지만 db의 편의성을 주는 것
역정규화일 때는 수정할 때 조심해주어야 한다.
정규화를 끝내고 개발을 하다가 성능이 좋지 않으면 역정규화를 사용하는 테이블을 만들기도 한다.
 
